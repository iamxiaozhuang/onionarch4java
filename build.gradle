plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4' apply false
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'pers.xiaozhuang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// 全局配置管理（适用于所有模块【含子模块】）
allprojects {

    group = 'pers.xiaozhuang'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }
}

// 适用于子模块配置
subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    jar { enabled = true }
    bootJar { enabled = false }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

// 特定项目配置
project(':onionarch-webapi'){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation project(':onionarch-application')
    }
}

// 特定项目配置
project(':onionarch-application'){
    dependencies {
        implementation project(':onionarch-domain')
    }

}

// 特定项目配置
project(':onionarch-domain'){

}

// 特定项目配置
project(':onionarch-infrastructure'){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'org.postgresql:postgresql'
        implementation project(':onionarch-domain')
    }

}
